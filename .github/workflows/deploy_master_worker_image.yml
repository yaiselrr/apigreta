name: Deploy Worker to production

on:
  push:
    branches: [ master ]

env:
  REGISTRY: "registry.digitalocean.com/gretasms"
  IMAGE_NAME_WORKER: "bo_worker"
  DOCKERFILE_WORKER: "Dockerfileworker"
  DEPLOYURL: https://corporateapi.gretaoffice.com/api/DockerImageVersion/ExternalPost
  DOTNET_NOLOGO: true                     # Disable the .NET logo in the console output
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience to skip caching NuGet packages and speed up the build
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0
      - name: Install doctl 
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Log in to DO Container Registry 
        run: doctl registry login --expiry-seconds 600

      - uses: chenryhabana205/dotnetgetversion@v6
        id: getversion1
        with:
          VERSION_FILE_PATH: src/Greta.BO.Api/Greta.BO.Api.csproj

      - name: Build container image worker
        run: docker build -f $(echo $DOCKERFILE_WORKER) --build-arg NEXUSUSERNAME=${{ secrets.NEXUSUSERNAME }} --build-arg NEXUSPASSWORD=${{ secrets.NEXUSPASSWORD }} -t $(echo $REGISTRY)/$(echo $IMAGE_NAME_WORKER):${{ steps.getversion1.outputs.TAG }} .

      - name: Push image to DigitalOcean Container Registry worker
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME_WORKER):${{ steps.getversion1.outputs.TAG }}

      - name: Notify to corporate new Worker
        shell: bash
        run: |
          curl "${{ env.DEPLOYURL }}" -H "ApiKey:${{ secrets.CORPORATEAPIKEY }}" -F "Type=2" -F "Name=${{ env.TAG }}" 
        env:
          TAG: ${{ steps.getversion1.outputs.TAG }}
