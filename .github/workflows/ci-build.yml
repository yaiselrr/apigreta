name: CI Build

on:
  #  push:
  #    branches: [ master ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:
permissions:
  contents: read
  pull-requests: write

env:
  NEXUSURL: https://nexus.gretatest.com/repository/nuget-hosted/
  DOTNET_NOLOGO: true                     # Disable the .NET logo in the console output
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience to skip caching NuGet packages and speed up the build
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry to Microsoft

jobs:
  build:
    if: ${{ false }}  # disable for now
    runs-on: ubuntu-latest
    name: CI Build
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: 7

      - name: Update nuget sources
        run: dotnet nuget add source ${{ env.NEXUSURL }} --name Nexus -u ${{ secrets.NEXUSUSERNAME }} -p ${{ secrets.NEXUSPASSWORD }} --store-password-in-clear-text

      - name: Restore Dependencies
        run: dotnet restore tests/Greta.BO.Api.Test/Greta.BO.Api.Test.csproj
      
      #      - name: Build
      #        run: dotnet build tests/Greta.BO.Api.Test/Greta.BO.Api.Test.csproj --configuration Release --no-restore

      - name: Test
        #        run: dotnet test tests/Greta.BO.Api.Test/Greta.BO.Api.Test.csproj --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
        run: dotnet test tests/Greta.BO.Api.Test/Greta.BO.Api.Test.csproj --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage

#      - name: Copy Coverage To Predictable Location
#        run: cp /home/runner/work/Greta.BO.Api/coverage/**/coverage.cobertura.xml coverage.cobertura.xml
#
#      - name: Coverage Summary Report
#        uses: irongut/CodeCoverageSummary@v1.2.0
#        with:
#          filename: coverage.cobertura.xml
#          badge: true
#          format: 'md'
#          output: 'both'
#
#      - name: Add Coverage PR Comment
#        uses: marocchino/sticky-pull-request-comment@v2.6.2
#        if: github.event_name == 'pull_request'
#        with:
#          recreate: true
#          path: code-coverage-results.md
#
#      - name: Upload Coverage Artifact
#        uses: actions/upload-artifact@v2.3.0
#        with:
#          name: test-coverage-report
#          path: |
#            coverage.cobertura.xml
#            code-coverage-results.md
