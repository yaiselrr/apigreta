// <auto-generated />
using System;
using Greta.BO.Api.Sqlserver;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Greta.BO.Api.Data
{
    [DbContext(typeof(SqlServerContext))]
    [Migration("20211204023123_fixseedcountry")]
    partial class fixseedcountry
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CategoryFee", b =>
                {
                    b.Property<long>("CategoriesId")
                        .HasColumnType("bigint");

                    b.Property<long>("FeesId")
                        .HasColumnType("bigint");

                    b.HasKey("CategoriesId", "FeesId");

                    b.HasIndex("FeesId");

                    b.ToTable("CategoryFee");
                });

            modelBuilder.Entity("CategoryTax", b =>
                {
                    b.Property<long>("CategoriesId")
                        .HasColumnType("bigint");

                    b.Property<long>("TaxsId")
                        .HasColumnType("bigint");

                    b.HasKey("CategoriesId", "TaxsId");

                    b.HasIndex("TaxsId");

                    b.ToTable("CategoryTax");
                });

            modelBuilder.Entity("DiscountProduct", b =>
                {
                    b.Property<long>("DiscountsId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductsId")
                        .HasColumnType("bigint");

                    b.HasKey("DiscountsId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("DiscountProduct");
                });

            modelBuilder.Entity("EmployeeStore", b =>
                {
                    b.Property<long>("EmployeesId")
                        .HasColumnType("bigint");

                    b.Property<long>("StoresId")
                        .HasColumnType("bigint");

                    b.HasKey("EmployeesId", "StoresId");

                    b.HasIndex("StoresId");

                    b.ToTable("EmployeeStore");
                });

            modelBuilder.Entity("FamilyFee", b =>
                {
                    b.Property<long>("FamiliesId")
                        .HasColumnType("bigint");

                    b.Property<long>("FeesId")
                        .HasColumnType("bigint");

                    b.HasKey("FamiliesId", "FeesId");

                    b.HasIndex("FeesId");

                    b.ToTable("FamilyFee");
                });

            modelBuilder.Entity("FamilyMixAndMatch", b =>
                {
                    b.Property<long>("FamiliesId")
                        .HasColumnType("bigint");

                    b.Property<long>("MixAndMatchsId")
                        .HasColumnType("bigint");

                    b.HasKey("FamiliesId", "MixAndMatchsId");

                    b.HasIndex("MixAndMatchsId");

                    b.ToTable("FamilyMixAndMatch");
                });

            modelBuilder.Entity("FeeProduct", b =>
                {
                    b.Property<long>("FeesId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductsId")
                        .HasColumnType("bigint");

                    b.HasKey("FeesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("FeeProduct");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.BOUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BOProfileId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("POSProfileId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BOProfileId");

                    b.HasIndex("POSProfileId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("BOUser");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Batch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<long>("StoreId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Batch");

                    b.HasDiscriminator<int>("Type").IsComplete(false).HasValue(0);
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.CSVMapping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MapperJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModelImport")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("CSVMapping");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AddOnlineStore")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowZeroStock")
                        .HasColumnType("bit");

                    b.Property<string>("BackgroundColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DefaulShelfTagId")
                        .HasColumnType("bigint");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(254)");

                    b.Property<bool>("DisplayStockOnPosButton")
                        .HasColumnType("bit");

                    b.Property<string>("ForegroundColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinimumAge")
                        .HasColumnType("int");

                    b.Property<bool>("Modifier")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("NoDiscountAllowed")
                        .HasColumnType("bit");

                    b.Property<bool>("NoPriceOnShelfTag")
                        .HasColumnType("bit");

                    b.Property<bool>("PrintShelfTag")
                        .HasColumnType("bit");

                    b.Property<bool>("PromptPriceAtPOS")
                        .HasColumnType("bit");

                    b.Property<bool>("SnapEBT")
                        .HasColumnType("bit");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .IsUnique();

                    b.HasIndex("DefaulShelfTagId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ProvinceId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Miami",
                            ProvinceId = 1L,
                            State = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dallas",
                            ProvinceId = 2L,
                            State = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        });
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.ClientApplication", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ClientApplication");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Back Office",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "POS",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        });
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "United States",
                            State = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        });
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("CityName")
                        .HasColumnType("varchar(30)");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("CountryName")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<decimal>("StoreCredit")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("TaxExcept")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Zip")
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CityId = 1L,
                            CountryId = 0L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "name@company.com",
                            FirstName = "CustomerFirstName0",
                            LastName = " CustomerLastName0",
                            Phone = "1234567890",
                            ProvinceId = 0L,
                            State = true,
                            StoreCredit = 0m,
                            TaxExcept = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 2L,
                            CityId = 1L,
                            CountryId = 0L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "name@company.com",
                            FirstName = "CustomerFirstName1",
                            LastName = " CustomerLastName1",
                            Phone = "1234567890",
                            ProvinceId = 0L,
                            State = true,
                            StoreCredit = 0m,
                            TaxExcept = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 3L,
                            CityId = 1L,
                            CountryId = 0L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "name@company.com",
                            FirstName = "CustomerFirstName2",
                            LastName = " CustomerLastName2",
                            Phone = "1234567890",
                            ProvinceId = 0L,
                            State = true,
                            StoreCredit = 0m,
                            TaxExcept = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 4L,
                            CityId = 1L,
                            CountryId = 0L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "name@company.com",
                            FirstName = "CustomerFirstName3",
                            LastName = " CustomerLastName3",
                            Phone = "1234567890",
                            ProvinceId = 0L,
                            State = true,
                            StoreCredit = 0m,
                            TaxExcept = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 5L,
                            CityId = 1L,
                            CountryId = 0L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "name@company.com",
                            FirstName = "CustomerFirstName4",
                            LastName = " CustomerLastName4",
                            Phone = "1234567890",
                            ProvinceId = 0L,
                            State = true,
                            StoreCredit = 0m,
                            TaxExcept = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 6L,
                            CityId = 1L,
                            CountryId = 0L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "name@company.com",
                            FirstName = "CustomerFirstName5",
                            LastName = " CustomerLastName5",
                            Phone = "1234567890",
                            ProvinceId = 0L,
                            State = true,
                            StoreCredit = 0m,
                            TaxExcept = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 7L,
                            CityId = 1L,
                            CountryId = 0L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "name@company.com",
                            FirstName = "CustomerFirstName6",
                            LastName = " CustomerLastName6",
                            Phone = "1234567890",
                            ProvinceId = 0L,
                            State = true,
                            StoreCredit = 0m,
                            TaxExcept = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 8L,
                            CityId = 1L,
                            CountryId = 0L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "name@company.com",
                            FirstName = "CustomerFirstName7",
                            LastName = " CustomerLastName7",
                            Phone = "1234567890",
                            ProvinceId = 0L,
                            State = true,
                            StoreCredit = 0m,
                            TaxExcept = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 9L,
                            CityId = 1L,
                            CountryId = 0L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "name@company.com",
                            FirstName = "CustomerFirstName8",
                            LastName = " CustomerLastName8",
                            Phone = "1234567890",
                            ProvinceId = 0L,
                            State = true,
                            StoreCredit = 0m,
                            TaxExcept = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 10L,
                            CityId = 1L,
                            CountryId = 0L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "name@company.com",
                            FirstName = "CustomerFirstName9",
                            LastName = " CustomerLastName9",
                            Phone = "1234567890",
                            ProvinceId = 0L,
                            State = true,
                            StoreCredit = 0m,
                            TaxExcept = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        });
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BackgroundColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("ForegroundColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("Perishable")
                        .HasColumnType("bit");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Name = "Default",
                            Perishable = false,
                            State = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        });
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Device", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GuidId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastPongTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrinterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrinterType")
                        .HasColumnType("int");

                    b.Property<string>("Printers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScaleBaudRate")
                        .HasColumnType("int");

                    b.Property<string>("ScaleComName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScaleModel")
                        .HasColumnType("int");

                    b.Property<string>("SignalRConnectionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<long>("StoreId")
                        .HasColumnType("bigint");

                    b.Property<int>("SynchroVersion")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("GuidId")
                        .IsUnique();

                    b.HasIndex("StoreId");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Discount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ActiveOnPeriod")
                        .HasColumnType("bit");

                    b.Property<bool>("ApplyAutomatically")
                        .HasColumnType("bit");

                    b.Property<bool>("ApplyToCustomerOnly")
                        .HasColumnType("bit");

                    b.Property<bool>("ApplyToProduct")
                        .HasColumnType("bit");

                    b.Property<long?>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FamilyId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Friday")
                        .HasColumnType("bit");

                    b.Property<bool?>("Monday")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<bool?>("Saturday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<bool?>("Sunday")
                        .HasColumnType("bit");

                    b.Property<bool?>("Thursday")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tuesday")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric(18,2)");

                    b.Property<bool?>("Wednesday")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FamilyId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("CityName")
                        .HasColumnType("varchar(30)");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("CountryName")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Zip")
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.ExternalScale", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Port")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<long>("ScaleBrandId")
                        .HasColumnType("bigint");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<long>("StoreId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("ScaleBrandId");

                    b.HasIndex("StoreId");

                    b.ToTable("ExternalScale");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ip = "192.168.0.101",
                            Port = "1889",
                            ScaleBrandId = 1L,
                            State = true,
                            StoreId = 1L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        });
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Family", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Family");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Family 0",
                            State = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Family 1",
                            State = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Family 2",
                            State = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Family 3",
                            State = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Family 4",
                            State = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        });
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Fee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<bool>("ApplyAutomatically")
                        .HasColumnType("bit");

                    b.Property<bool>("ApplyDiscount")
                        .HasColumnType("bit");

                    b.Property<bool>("ApplyFoodStamp")
                        .HasColumnType("bit");

                    b.Property<bool>("ApplyTax")
                        .HasColumnType("bit");

                    b.Property<bool>("ApplyToItemQty")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IncludeInItemPrice")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<bool>("RestrictToItems")
                        .HasColumnType("bit");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Fee");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.FunctionGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClientApplicationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<long?>("ProfilesId")
                        .HasColumnType("bigint");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("ClientApplicationId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ProfilesId");

                    b.ToTable("FunctionGroup");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tax",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 2L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Discount",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 3L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 4L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "External Scale",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 5L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Family",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 6L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Profiles",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 7L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Scale Brand",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 8L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Scale Category",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 9L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Scale label type",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 10L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Store",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 11L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tender",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 12L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tender Type",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 13L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vendor",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 14L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vendor Contact",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 15L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "SCOM",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 16L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Settings",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 17L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 18L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Role",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 19L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Price Batch",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 20L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ad Batch",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 21L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mix and Match",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 22L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Product",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 23L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Department",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 24L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shelf Tags",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 25L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Price Family",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 26L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Region",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 27L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Report",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 28L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Employee",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 29L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Customer",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 30L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "General Setting",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 31L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "POS Config",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 32L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Report Settings",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 33L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Home Screen",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 34L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vendor Product",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 35L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Store Product",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 36L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Scale Label Definition",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 37L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Scale Home FAV",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 38L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Price Batch Detail",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 39L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Image",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 40L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fee",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 41L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Device",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 42L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CSV Mapping",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 43L,
                            ClientApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Client Application",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 101L,
                            ClientApplicationId = 2L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sell",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        });
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Image", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.KitProductProduct", b =>
                {
                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("KitProductId")
                        .HasColumnType("bigint");

                    b.HasKey("ProductId", "KitProductId");

                    b.HasIndex("KitProductId");

                    b.ToTable("KitProductProduct");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.MixAndMatch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ActivePeriod")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MixAndMatchType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<long?>("ProductBuyId")
                        .HasColumnType("bigint");

                    b.Property<int>("QTY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ProductBuyId");

                    b.ToTable("MixAndMatch");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("FunctionGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("FunctionGroupId");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "view_tax",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 1L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 2L,
                            Code = "add_edit_tax",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 1L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 3L,
                            Code = "delete_tax",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 1L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 4L,
                            Code = "view_discount",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 2L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 5L,
                            Code = "add_edit_discount",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 2L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 6L,
                            Code = "delete_discount",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 2L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 7L,
                            Code = "view_category",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 3L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 8L,
                            Code = "add_edit_category",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 3L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 9L,
                            Code = "delete_category",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 3L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 10L,
                            Code = "view_external_scale",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 4L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 11L,
                            Code = "add_edit_external_scale",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 4L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 12L,
                            Code = "delete_external_scale",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 4L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 13L,
                            Code = "view_family",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 5L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 14L,
                            Code = "add_edit_family",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 5L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 15L,
                            Code = "delete_family",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 5L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 16L,
                            Code = "view_profiles",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 6L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 17L,
                            Code = "add_edit_profiles",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 6L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 18L,
                            Code = "delete_profiles",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 6L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 19L,
                            Code = "view_scale_brand",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 7L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 20L,
                            Code = "add_edit_scale_brand",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 7L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 21L,
                            Code = "delete_scale_brand",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 7L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 22L,
                            Code = "view_scale_category",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 8L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 23L,
                            Code = "add_edit_scale_category",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 8L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 24L,
                            Code = "delete_scale_category",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 8L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 25L,
                            Code = "view_scale_label_type",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 9L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 26L,
                            Code = "add_edit_scale_label_type",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 9L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 27L,
                            Code = "delete_scale_label_type",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 9L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 28L,
                            Code = "view_store",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 10L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 29L,
                            Code = "add_edit_store",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 10L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 30L,
                            Code = "delete_store",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 10L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 31L,
                            Code = "view_tender",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 11L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 32L,
                            Code = "add_edit_tender",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 11L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 33L,
                            Code = "delete_tender",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 11L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 34L,
                            Code = "view_tender_type",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 12L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 35L,
                            Code = "add_edit_tender_type",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 12L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 36L,
                            Code = "delete_tender_type",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 12L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 37L,
                            Code = "view_vendor",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 13L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 38L,
                            Code = "add_edit_vendor",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 13L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 39L,
                            Code = "delete_vendor",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 13L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 40L,
                            Code = "view_vendor_contact",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 14L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 41L,
                            Code = "add_edit_vendor_contact",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 14L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 42L,
                            Code = "delete_vendor_contact",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 14L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 43L,
                            Code = "view_scom",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 15L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 44L,
                            Code = "add_edit_scom",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 15L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 45L,
                            Code = "delete_scom",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 15L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 46L,
                            Code = "view_settings",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 16L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 47L,
                            Code = "add_edit_settings",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 16L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 48L,
                            Code = "delete_settings",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 16L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 49L,
                            Code = "view_user",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 17L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 50L,
                            Code = "add_edit_user",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 17L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 51L,
                            Code = "delete_user",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 17L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 52L,
                            Code = "view_role",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 18L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 53L,
                            Code = "add_edit_role",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 18L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 54L,
                            Code = "delete_role",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 18L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 55L,
                            Code = "view_price_batch",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 19L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 56L,
                            Code = "add_edit_price_batch",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 19L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 57L,
                            Code = "delete_price_batch",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 19L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 58L,
                            Code = "view_ad_batch",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 20L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 59L,
                            Code = "add_edit_ad_batch",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 20L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 60L,
                            Code = "delete_ad_batch",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 20L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 61L,
                            Code = "view_mix_and_match",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 21L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 62L,
                            Code = "add_edit_mix_and_match",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 21L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 63L,
                            Code = "delete_mix_and_match",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 21L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 64L,
                            Code = "view_product",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 22L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 65L,
                            Code = "add_edit_product",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 22L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 66L,
                            Code = "delete_product",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 22L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 67L,
                            Code = "view_department",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 23L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 68L,
                            Code = "add_edit_department",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 23L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 69L,
                            Code = "delete_department",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 23L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 70L,
                            Code = "view_shelf_tags",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 24L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 71L,
                            Code = "add_edit_shelf_tags",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 24L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 72L,
                            Code = "delete_shelf_tags",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 24L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 73L,
                            Code = "view_price_family",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 25L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 74L,
                            Code = "add_edit_price_family",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 25L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 75L,
                            Code = "delete_price_family",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 25L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 76L,
                            Code = "view_region",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 26L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 77L,
                            Code = "add_edit_region",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 26L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 78L,
                            Code = "delete_region",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 26L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 79L,
                            Code = "view_report",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 27L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 80L,
                            Code = "add_edit_report",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 27L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 81L,
                            Code = "delete_report",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 27L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 82L,
                            Code = "view_employee",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 28L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 83L,
                            Code = "add_edit_employee",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 28L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 84L,
                            Code = "delete_employee",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 28L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 85L,
                            Code = "view_customer",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 29L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 86L,
                            Code = "add_edit_customer",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 29L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 87L,
                            Code = "delete_customer",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 29L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 88L,
                            Code = "view_general_setting",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 30L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 89L,
                            Code = "add_edit_general_setting",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 30L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 90L,
                            Code = "delete_general_setting",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 30L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 91L,
                            Code = "view_pos_config",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 31L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 92L,
                            Code = "add_edit_pos_config",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 31L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 93L,
                            Code = "delete_pos_config",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 31L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 94L,
                            Code = "view_report_settings",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 32L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 95L,
                            Code = "add_edit_report_settings",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 32L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 96L,
                            Code = "delete_report_settings",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 32L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 97L,
                            Code = "view_home_screen",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 33L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 98L,
                            Code = "add_edit_home_screen",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 33L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 99L,
                            Code = "delete_home_screen",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 33L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 100L,
                            Code = "view_vendor_product",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 34L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 101L,
                            Code = "add_edit_vendor_product",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 34L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 102L,
                            Code = "delete_vendor_product",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 34L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 103L,
                            Code = "view_store_product",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 35L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 104L,
                            Code = "add_edit_store_product",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 35L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 105L,
                            Code = "delete_store_product",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 35L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 106L,
                            Code = "view_scale_label_definition",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 36L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 107L,
                            Code = "add_edit_scale_label_definition",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 36L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 108L,
                            Code = "delete_scale_label_definition",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 36L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 109L,
                            Code = "view_scale_home_fav",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 37L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 110L,
                            Code = "add_edit_scale_home_fav",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 37L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 111L,
                            Code = "delete_scale_home_fav",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 37L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 112L,
                            Code = "view_price_batch_detail",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 38L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 113L,
                            Code = "add_edit_price_batch_detail",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 38L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 114L,
                            Code = "delete_price_batch_detail",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 38L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 115L,
                            Code = "view_image",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 39L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 116L,
                            Code = "add_edit_image",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 39L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 117L,
                            Code = "delete_image",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 39L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 118L,
                            Code = "view_fee",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 40L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 119L,
                            Code = "add_edit_fee",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 40L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 120L,
                            Code = "delete_fee",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 40L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 121L,
                            Code = "view_device",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 41L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 122L,
                            Code = "add_edit_device",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 41L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 123L,
                            Code = "delete_device",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 41L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 124L,
                            Code = "view_csv_mapping",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 42L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 125L,
                            Code = "add_edit_csv_mapping",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 42L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 126L,
                            Code = "delete_csv_mapping",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 42L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 127L,
                            Code = "view_client_application",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 43L,
                            Name = "View",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 128L,
                            Code = "add_edit_client_application",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 43L,
                            Name = "Add/Edit",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 129L,
                            Code = "delete_client_application",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 43L,
                            Name = "Delete",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 1001L,
                            Code = "allow_sell",
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FunctionGroupId = 101L,
                            Name = "Sell",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        });
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.PriceBatchDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FamilyId")
                        .HasColumnType("bigint");

                    b.Property<long>("HeaderId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(18,2)");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.HasIndex("HeaderId");

                    b.HasIndex("ProductId");

                    b.ToTable("PriceBatchDetail");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AddOnlineStore")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowZeroStock")
                        .HasColumnType("bit");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DefaulShelfTagId")
                        .HasColumnType("bigint");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DisplayStockOnPosButton")
                        .HasColumnType("bit");

                    b.Property<long?>("FamilyId")
                        .HasColumnType("bigint");

                    b.Property<int>("LoyaltyPoints")
                        .HasColumnType("int");

                    b.Property<int>("MinimumAge")
                        .HasColumnType("int");

                    b.Property<bool>("Modifier")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("NoDiscountAllowed")
                        .HasColumnType("bit");

                    b.Property<bool>("NoPriceOnShelfTag")
                        .HasColumnType("bit");

                    b.Property<decimal>("OrderAmount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("OrderTrigger")
                        .HasColumnType("numeric(18,2)");

                    b.Property<bool>("PosVisible")
                        .HasColumnType("bit");

                    b.Property<bool>("PrintShelfTag")
                        .HasColumnType("bit");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<bool>("PromptPriceAtPOS")
                        .HasColumnType("bit");

                    b.Property<decimal>("QtyHand")
                        .HasColumnType("numeric(18,2)");

                    b.Property<bool>("ScaleVisible")
                        .HasColumnType("bit");

                    b.Property<bool>("SnapEBT")
                        .HasColumnType("bit");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("UPC")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DefaulShelfTagId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FamilyId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UPC")
                        .IsUnique();

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Profiles", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ApplicationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ApplicationId = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Administrator",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 2L,
                            ApplicationId = 2L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Manager",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        });
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Province", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Province");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CountryId = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Florida",
                            State = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 2L,
                            CountryId = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Texas",
                            State = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        });
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Region", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Region");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Unknow",
                            State = false,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "East",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        });
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllStores")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<long?>("RegionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("RegionId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AllStores = true,
                            CreatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Administrator",
                            State = true,
                            UpdatedAt = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        });
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.ScaleBrand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ScaleBrand");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Greta LP1 Printer",
                            State = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hobart",
                            State = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        });
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.ScaleCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BackgroundColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("ForegroundColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .IsUnique();

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ScaleCategory");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.ScaleHomeFav", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<long>("StoreId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("StoreId", "DepartmentId")
                        .IsUnique();

                    b.ToTable("ScaleHomeFav");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.ScaleLabelDefinition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ScaleBrandId")
                        .HasColumnType("bigint");

                    b.Property<long>("ScaleLabelType1Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ScaleLabelType2Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ScaleProductId")
                        .HasColumnType("bigint");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("ScaleBrandId");

                    b.HasIndex("ScaleLabelType1Id");

                    b.HasIndex("ScaleLabelType2Id");

                    b.HasIndex("ScaleProductId");

                    b.ToTable("ScaleLabelDefinition");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.ScaleLabelType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Design")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LabelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<int>("ScaleType")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ScaleLabelType");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Design = "{}",
                            LabelId = 0,
                            Name = "SHELFTAG",
                            ScaleType = 0,
                            State = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Design = "{}",
                            LabelId = 0,
                            Name = "Greta label Example",
                            ScaleType = 1,
                            State = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LabelId = 0,
                            Name = "first External",
                            ScaleType = 2,
                            State = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LabelId = 0,
                            Name = "second External",
                            ScaleType = 2,
                            State = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        });
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Store", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CashDiscount")
                        .HasColumnType("bit");

                    b.Property<decimal>("CashDiscountValue")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GuidId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastBackupPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastBackupTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastBackupVersion")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint");

                    b.Property<string>("RemotePrinters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<int>("SynchroVersion")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("GuidId")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("RegionId");

                    b.HasIndex("RoleId");

                    b.ToTable("Store");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CashDiscount = false,
                            CashDiscountValue = 0m,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuidId = new Guid("862f86ad-62a4-497c-bff6-360c41872524"),
                            LastBackupTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastBackupVersion = 0,
                            Name = "Central Park Store",
                            RegionId = 2L,
                            State = true,
                            SynchroVersion = 0,
                            Updated = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        },
                        new
                        {
                            Id = 2L,
                            CashDiscount = false,
                            CashDiscountValue = 0m,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuidId = new Guid("416edcff-1690-4d02-b7f4-ab65a915c621"),
                            LastBackupTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastBackupVersion = 0,
                            Name = "Miami Store",
                            RegionId = 2L,
                            State = true,
                            SynchroVersion = 0,
                            Updated = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        });
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.StoreProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BinLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GrossProfit")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(18,2)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<long>("StoreId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.HasIndex("ProductId", "StoreId")
                        .IsUnique();

                    b.ToTable("StoreProduct");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Synchro", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("StoreId")
                        .HasColumnType("bigint");

                    b.Property<long>("Tag")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Synchro");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.SynchroDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<long>("SynchroId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("SynchroId");

                    b.ToTable("SynchroDetail");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Tax", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(254)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tax");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Michigan Tax",
                            Name = "Michigan Tax",
                            State = true,
                            Type = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6",
                            Value = 10.0
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "County Tax",
                            Name = "County Tax",
                            State = true,
                            Type = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6",
                            Value = 1.0
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Michigan Other Tax",
                            Name = "Michigan Other Tax",
                            State = true,
                            Type = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6",
                            Value = 5.0
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "County Other Tax",
                            Name = "County Other Tax",
                            State = true,
                            Type = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6",
                            Value = 5.0
                        });
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.TenderType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CashDiscount")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayAs")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("OpenDrawer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TenderType");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Ticket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GuidId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("GuidId")
                        .IsUnique();

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Vendor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("CityName")
                        .HasColumnType("varchar(30)");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("CountryName")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MinimalOrder")
                        .HasColumnType("numeric(15,3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Note")
                        .HasColumnType("varchar(254)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Zip")
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id");

                    b.ToTable("Vendor");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CityId = 0L,
                            CountryId = 0L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MinimalOrder = 200m,
                            Name = "Vendor 0",
                            Note = "Note",
                            ProvinceId = 0L,
                            State = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCreatorId = "a54f8cb3-1d5f-424c-aaa2-11e39c14f7f6"
                        });
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.VendorContact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Fax")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<bool>("Primary")
                        .HasColumnType("bit");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<long>("VendorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VendorId");

                    b.ToTable("VendorContact");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.VendorProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CaseCost")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("CasePack")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPrimary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderByCase")
                        .HasColumnType("int");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCreatorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<long>("VendorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("VendorId");

                    b.ToTable("VendorProduct");
                });

            modelBuilder.Entity("MixAndMatchProduct", b =>
                {
                    b.Property<long>("MixAndMatchsId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductsId")
                        .HasColumnType("bigint");

                    b.HasKey("MixAndMatchsId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("MixAndMatchProduct");
                });

            modelBuilder.Entity("PermissionProfiles", b =>
                {
                    b.Property<long>("PermissionsId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProfilesId")
                        .HasColumnType("bigint");

                    b.HasKey("PermissionsId", "ProfilesId");

                    b.HasIndex("ProfilesId");

                    b.ToTable("PermissionProfiles");
                });

            modelBuilder.Entity("ScaleHomeFavScaleProduct", b =>
                {
                    b.Property<long>("ScaleHomeFavsId")
                        .HasColumnType("bigint");

                    b.Property<long>("ScaleProductsId")
                        .HasColumnType("bigint");

                    b.HasKey("ScaleHomeFavsId", "ScaleProductsId");

                    b.HasIndex("ScaleProductsId");

                    b.ToTable("ScaleHomeFavScaleProduct");
                });

            modelBuilder.Entity("StoreProductTax", b =>
                {
                    b.Property<long>("StoreProductsId")
                        .HasColumnType("bigint");

                    b.Property<long>("TaxsId")
                        .HasColumnType("bigint");

                    b.HasKey("StoreProductsId", "TaxsId");

                    b.HasIndex("TaxsId");

                    b.ToTable("StoreProductTax");
                });

            modelBuilder.Entity("StoreTax", b =>
                {
                    b.Property<long>("StoresId")
                        .HasColumnType("bigint");

                    b.Property<long>("TaxsId")
                        .HasColumnType("bigint");

                    b.HasKey("StoresId", "TaxsId");

                    b.HasIndex("TaxsId");

                    b.ToTable("StoreTax");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.AdBatch", b =>
                {
                    b.HasBaseType("Greta.BO.Api.Entities.Batch");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.PriceBatch", b =>
                {
                    b.HasBaseType("Greta.BO.Api.Entities.Batch");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.KitProduct", b =>
                {
                    b.HasBaseType("Greta.BO.Api.Entities.Product");

                    b.ToTable("KitProduct");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.ScaleProduct", b =>
                {
                    b.HasBaseType("Greta.BO.Api.Entities.Product");

                    b.Property<decimal>("AddedSugar")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("AddedSugarGrams")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("AmountPerServingCalories")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("ByCount")
                        .HasColumnType("int");

                    b.Property<decimal>("Calcium")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("CalciumMGrams")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("Cholesterol")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("CholesterolMGrams")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("Description1")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Description2")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Description3")
                        .HasColumnType("varchar(300)");

                    b.Property<decimal>("DietaryFiber")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("DietaryFiberGrams")
                        .HasColumnType("numeric(18,2)");

                    b.Property<bool>("ForceTare")
                        .HasColumnType("bit");

                    b.Property<double>("Iron")
                        .HasColumnType("float");

                    b.Property<decimal>("IronMGrams")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("PLUNumber")
                        .HasColumnType("int");

                    b.Property<int>("PLUType")
                        .HasColumnType("int");

                    b.Property<decimal>("PackageWeight")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("Potas")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("PotasMGrams")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("ProductLife")
                        .HasColumnType("int");

                    b.Property<decimal>("ProteinGrams")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("SaturedFat")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("SaturedFatGrams")
                        .HasColumnType("numeric(18,2)");

                    b.Property<long>("ScaleCategoryId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ServingPerContainer")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("ServingSize")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("ShelfLife")
                        .HasColumnType("int");

                    b.Property<decimal>("Sodium")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("SodiumMGrams")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("Tare1")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("Tare2")
                        .HasColumnType("numeric(18,2)");

                    b.Property<bool>("TareIsPercent")
                        .HasColumnType("bit");

                    b.Property<string>("Text1")
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Text2")
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Text3")
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Text4")
                        .HasColumnType("varchar(1000)");

                    b.Property<decimal>("TotalCarbohydrate")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("TotalCarbohydrateGrams")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("TotalFat")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("TotalFatGrams")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("TotalSugarGrams")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("VitD")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("VitDMGrams")
                        .HasColumnType("numeric(18,2)");

                    b.HasIndex("PLUNumber")
                        .IsUnique()
                        .HasFilter("[PLUNumber] IS NOT NULL");

                    b.HasIndex("ScaleCategoryId");

                    b.ToTable("ScaleProduct");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.WProduct", b =>
                {
                    b.HasBaseType("Greta.BO.Api.Entities.Product");

                    b.Property<decimal>("Tare")
                        .HasColumnType("numeric(18,3)");

                    b.ToTable("WProduct");
                });

            modelBuilder.Entity("CategoryFee", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Fee", null)
                        .WithMany()
                        .HasForeignKey("FeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CategoryTax", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Tax", null)
                        .WithMany()
                        .HasForeignKey("TaxsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiscountProduct", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Discount", null)
                        .WithMany()
                        .HasForeignKey("DiscountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeStore", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Store", null)
                        .WithMany()
                        .HasForeignKey("StoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FamilyFee", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Family", null)
                        .WithMany()
                        .HasForeignKey("FamiliesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Fee", null)
                        .WithMany()
                        .HasForeignKey("FeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FamilyMixAndMatch", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Family", null)
                        .WithMany()
                        .HasForeignKey("FamiliesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.MixAndMatch", null)
                        .WithMany()
                        .HasForeignKey("MixAndMatchsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FeeProduct", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Fee", null)
                        .WithMany()
                        .HasForeignKey("FeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.BOUser", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Profiles", "BOProfile")
                        .WithMany()
                        .HasForeignKey("BOProfileId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Greta.BO.Api.Entities.Profiles", "POSProfile")
                        .WithMany()
                        .HasForeignKey("POSProfileId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Greta.BO.Api.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BOProfile");

                    b.Navigation("POSProfile");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Batch", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Category", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.ScaleLabelType", "DefaulShelfTag")
                        .WithMany()
                        .HasForeignKey("DefaulShelfTagId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Greta.BO.Api.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DefaulShelfTag");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.City", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Customer", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Device", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Store", "Store")
                        .WithMany("Devices")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Discount", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Category", "Category")
                        .WithMany("Discounts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Greta.BO.Api.Entities.Department", "Department")
                        .WithMany("Discounts")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Greta.BO.Api.Entities.Family", null)
                        .WithMany("Discounts")
                        .HasForeignKey("FamilyId");

                    b.Navigation("Category");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Employee", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.ExternalScale", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.ScaleBrand", "ScaleBrand")
                        .WithMany("ExternalScales")
                        .HasForeignKey("ScaleBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScaleBrand");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.FunctionGroup", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.ClientApplication", "ClientApplication")
                        .WithMany("FunctionGroups")
                        .HasForeignKey("ClientApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Profiles", null)
                        .WithMany("FunctionGroups")
                        .HasForeignKey("ProfilesId");

                    b.Navigation("ClientApplication");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.KitProductProduct", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.KitProduct", "KitProduct")
                        .WithMany()
                        .HasForeignKey("KitProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("KitProduct");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.MixAndMatch", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Product", "ProductBuy")
                        .WithMany("BuyMixAndMatchs")
                        .HasForeignKey("ProductBuyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ProductBuy");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Permission", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.FunctionGroup", "FunctionGroup")
                        .WithMany("Permissions")
                        .HasForeignKey("FunctionGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FunctionGroup");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.PriceBatchDetail", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Family", "Family")
                        .WithMany("PriceBatchDetails")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Greta.BO.Api.Entities.Batch", "Header")
                        .WithMany("PriceBatchDetails")
                        .HasForeignKey("HeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Product", "Product")
                        .WithMany("PriceBatchDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Family");

                    b.Navigation("Header");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Product", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.ScaleLabelType", "DefaulShelfTag")
                        .WithMany()
                        .HasForeignKey("DefaulShelfTagId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Greta.BO.Api.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Family", "Family")
                        .WithMany()
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Category");

                    b.Navigation("DefaulShelfTag");

                    b.Navigation("Department");

                    b.Navigation("Family");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Profiles", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.ClientApplication", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Province", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Role", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.ScaleCategory", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.ScaleHomeFav", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.ScaleLabelDefinition", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.ScaleBrand", "ScaleBrand")
                        .WithMany()
                        .HasForeignKey("ScaleBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.ScaleLabelType", "ScaleLabelType1")
                        .WithMany()
                        .HasForeignKey("ScaleLabelType1Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.ScaleLabelType", "ScaleLabelType2")
                        .WithMany()
                        .HasForeignKey("ScaleLabelType2Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.ScaleProduct", "ScaleProduct")
                        .WithMany("ScaleLabelDefinitions")
                        .HasForeignKey("ScaleProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScaleBrand");

                    b.Navigation("ScaleLabelType1");

                    b.Navigation("ScaleLabelType2");

                    b.Navigation("ScaleProduct");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Store", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Role", null)
                        .WithMany("Stores")
                        .HasForeignKey("RoleId");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.StoreProduct", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Product", "Product")
                        .WithMany("StoreProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Synchro", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Store", null)
                        .WithMany("Synchros")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.SynchroDetail", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Synchro", null)
                        .WithMany("SynchroDetails")
                        .HasForeignKey("SynchroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.VendorContact", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Vendor", "Vendor")
                        .WithMany("VendorContacts")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.VendorProduct", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Product", "Product")
                        .WithMany("VendorProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Vendor", "Vendor")
                        .WithMany("VendorProducts")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("MixAndMatchProduct", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.MixAndMatch", null)
                        .WithMany()
                        .HasForeignKey("MixAndMatchsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PermissionProfiles", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Profiles", null)
                        .WithMany()
                        .HasForeignKey("ProfilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ScaleHomeFavScaleProduct", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.ScaleHomeFav", null)
                        .WithMany()
                        .HasForeignKey("ScaleHomeFavsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.ScaleProduct", null)
                        .WithMany()
                        .HasForeignKey("ScaleProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StoreProductTax", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.StoreProduct", null)
                        .WithMany()
                        .HasForeignKey("StoreProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Tax", null)
                        .WithMany()
                        .HasForeignKey("TaxsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StoreTax", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Store", null)
                        .WithMany()
                        .HasForeignKey("StoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.Tax", null)
                        .WithMany()
                        .HasForeignKey("TaxsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.KitProduct", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Product", null)
                        .WithOne()
                        .HasForeignKey("Greta.BO.Api.Entities.KitProduct", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.ScaleProduct", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Product", null)
                        .WithOne()
                        .HasForeignKey("Greta.BO.Api.Entities.ScaleProduct", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Greta.BO.Api.Entities.ScaleCategory", "ScaleCategory")
                        .WithMany()
                        .HasForeignKey("ScaleCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScaleCategory");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.WProduct", b =>
                {
                    b.HasOne("Greta.BO.Api.Entities.Product", null)
                        .WithOne()
                        .HasForeignKey("Greta.BO.Api.Entities.WProduct", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Batch", b =>
                {
                    b.Navigation("PriceBatchDetails");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Category", b =>
                {
                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.ClientApplication", b =>
                {
                    b.Navigation("FunctionGroups");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Department", b =>
                {
                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Family", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("PriceBatchDetails");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.FunctionGroup", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Product", b =>
                {
                    b.Navigation("BuyMixAndMatchs");

                    b.Navigation("PriceBatchDetails");

                    b.Navigation("StoreProducts");

                    b.Navigation("VendorProducts");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Profiles", b =>
                {
                    b.Navigation("FunctionGroups");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Role", b =>
                {
                    b.Navigation("Stores");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.ScaleBrand", b =>
                {
                    b.Navigation("ExternalScales");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Store", b =>
                {
                    b.Navigation("Devices");

                    b.Navigation("Synchros");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Synchro", b =>
                {
                    b.Navigation("SynchroDetails");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.Vendor", b =>
                {
                    b.Navigation("VendorContacts");

                    b.Navigation("VendorProducts");
                });

            modelBuilder.Entity("Greta.BO.Api.Entities.ScaleProduct", b =>
                {
                    b.Navigation("ScaleLabelDefinitions");
                });
#pragma warning restore 612, 618
        }
    }
}
